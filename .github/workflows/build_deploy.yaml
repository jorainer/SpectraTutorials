on: [push]
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    container: bioconductor/bioconductor_docker:devel
    steps:
      - name: Install latest git
        run: |
          ## git version provided
          git --version
          ## to be able to install software properties
          sudo apt-get update -y
          ## to be able to use add-apt-repository
          sudo apt-get install software-properties-common -y
          ## to use stable releases of git that are already in a PPA at
          ## https://launchpad.net/~git-core/+archive/ubuntu/candidate
          sudo add-apt-repository ppa:git-core/candidate -y
          ## Update
          sudo apt-get update -y
          ## Upgrade git and other tools
          sudo apt-get upgrade -y
          ## latest git version
          git --version
        shell: bash {0}
      ## Related to https://github.com/rocker-org/rocker-versioned2/issues/52

      ## Most of these steps are the same as the ones in
      ## https://github.com/r-lib/actions/blob/master/examples/check-standard.yaml
      ## If they update their steps, we will also need to update ours.
      - uses: actions/checkout@v2

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          message(paste('****', Sys.time(), 'installing BiocManager ****'))
          remotes::install_cran("BiocManager")
        shell: Rscript {0}

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v1
        with:
          path: /usr/local/lib/R/site-library
          key: ${{ runner.os }}-r-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-r-1-

      # This lets us augment with additional dependencies
      - name: Install system dependencies
        if: runner.os == 'Linux'
        env:
          RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
        run: |
          Rscript -e "remotes::install_github('r-hub/sysreqs')"
          sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
          sudo -s eval "$sysreqs"

      - name: Install dependencies
        run: |
          options(repos = c(CRAN = "https://cran.r-project.org"))
          remotes::install_deps(dependencies = TRUE, repos = BiocManager::repositories())
          remotes::install_cran("rcmdcheck")
        shell: Rscript {0}

      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        run: rcmdcheck::rcmdcheck(args = c("--no-manual"), error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - name: Install deploy dependencies
        run: |
          apt-get update
          apt-get -y install rsync

      - name: Install pkgdown
        if: github.ref == 'refs/heads/main'
        run: |
          remotes::install_github("r-lib/pkgdown")
        shell: Rscript {0}

      - name: Install package
        if: github.ref == 'refs/heads/main'
        run: R CMD INSTALL .

      - name: Deploy package
        if: github.ref == 'refs/heads/main'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          Rscript -e "pkgdown::deploy_to_branch(new_process = FALSE)"
        shell: bash {0}
        ## Note that you need to run pkgdown::deploy_to_branch(new_process = FALSE)
        ## at least one locally before this will work. This creates the gh-pages
        ## branch (erasing anything you haven't version controlled!) and
        ## makes the git history recognizable by pkgdown.

      - name: Dockerhub login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: build-and-push
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          repository: jorainer/spectra_tutorials
          tag_with_ref: true
          tag_with_sha: true
          tags: latest

      - name: image-digest
        if: github.ref == 'refs/heads/main'
        run: echo ${{ steps.docker_build.outputs.digest }}
